{
 "cells": [
  {
   "cell_type": "markdown",
<<<<<<< HEAD
   "metadata": {
    "toc": "true"
   },
   "source": [
    "<h1>Table of Contents<span class=\"tocSkip\"></span></h1>\n",
    "<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#粒界の最安定構造探索の自動化\" data-toc-modified-id=\"粒界の最安定構造探索の自動化-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;</span>粒界の最安定構造探索の自動化</a></span></li><li><span><a href=\"#はじめに\" data-toc-modified-id=\"はじめに-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;</span>はじめに</a></span><ul class=\"toc-item\"><li><span><a href=\"#背景\" data-toc-modified-id=\"背景-2.1\"><span class=\"toc-item-num\">2.1&nbsp;&nbsp;</span>背景</a></span></li><li><span><a href=\"#目的\" data-toc-modified-id=\"目的-2.2\"><span class=\"toc-item-num\">2.2&nbsp;&nbsp;</span>目的</a></span></li></ul></li><li><span><a href=\"#構造最適化\" data-toc-modified-id=\"構造最適化-3\"><span class=\"toc-item-num\">3&nbsp;&nbsp;</span>構造最適化</a></span><ul class=\"toc-item\"><li><span><a href=\"#背景\" data-toc-modified-id=\"背景-3.1\"><span class=\"toc-item-num\">3.1&nbsp;&nbsp;</span>背景</a></span><ul class=\"toc-item\"><li><span><a href=\"#VASPの構造最適化ルーチン\" data-toc-modified-id=\"VASPの構造最適化ルーチン-3.1.1\"><span class=\"toc-item-num\">3.1.1&nbsp;&nbsp;</span>VASPの構造最適化ルーチン</a></span></li><li><span><a href=\"#POSCARのファイル構造\" data-toc-modified-id=\"POSCARのファイル構造-3.1.2\"><span class=\"toc-item-num\">3.1.2&nbsp;&nbsp;</span>POSCARのファイル構造</a></span></li><li><span><a href=\"#vasp計算の結果\" data-toc-modified-id=\"vasp計算の結果-3.1.3\"><span class=\"toc-item-num\">3.1.3&nbsp;&nbsp;</span>vasp計算の結果</a></span></li></ul></li><li><span><a href=\"#手法\" data-toc-modified-id=\"手法-3.2\"><span class=\"toc-item-num\">3.2&nbsp;&nbsp;</span>手法</a></span><ul class=\"toc-item\"><li><span><a href=\"#EAM\" data-toc-modified-id=\"EAM-3.2.1\"><span class=\"toc-item-num\">3.2.1&nbsp;&nbsp;</span>EAM</a></span></li><li><span><a href=\"#ディレクトリー構造\" data-toc-modified-id=\"ディレクトリー構造-3.2.2\"><span class=\"toc-item-num\">3.2.2&nbsp;&nbsp;</span>ディレクトリー構造</a></span></li></ul></li><li><span><a href=\"#結果\" data-toc-modified-id=\"結果-3.3\"><span class=\"toc-item-num\">3.3&nbsp;&nbsp;</span>結果</a></span><ul class=\"toc-item\"><li><span><a href=\"#囲い込み\" data-toc-modified-id=\"囲い込み-3.3.1\"><span class=\"toc-item-num\">3.3.1&nbsp;&nbsp;</span>囲い込み</a></span></li><li><span><a href=\"#界面エネルギーへの変換\" data-toc-modified-id=\"界面エネルギーへの変換-3.3.2\"><span class=\"toc-item-num\">3.3.2&nbsp;&nbsp;</span>界面エネルギーへの変換</a></span></li></ul></li><li><span><a href=\"#2次元での最小化\" data-toc-modified-id=\"2次元での最小化-3.4\"><span class=\"toc-item-num\">3.4&nbsp;&nbsp;</span>2次元での最小化</a></span><ul class=\"toc-item\"><li><span><a href=\"#最小計算数での試行\" data-toc-modified-id=\"最小計算数での試行-3.4.1\"><span class=\"toc-item-num\">3.4.1&nbsp;&nbsp;</span>最小計算数での試行</a></span></li><li><span><a href=\"#手動による計算点の追加\" data-toc-modified-id=\"手動による計算点の追加-3.4.2\"><span class=\"toc-item-num\">3.4.2&nbsp;&nbsp;</span>手動による計算点の追加</a></span></li><li><span><a href=\"#自動での追加\" data-toc-modified-id=\"自動での追加-3.4.3\"><span class=\"toc-item-num\">3.4.3&nbsp;&nbsp;</span>自動での追加</a></span></li></ul></li><li><span><a href=\"#問題の見直し\" data-toc-modified-id=\"問題の見直し-3.5\"><span class=\"toc-item-num\">3.5&nbsp;&nbsp;</span>問題の見直し</a></span></li></ul></li><li><span><a href=\"#自動原子削除の実装\" data-toc-modified-id=\"自動原子削除の実装-4\"><span class=\"toc-item-num\">4&nbsp;&nbsp;</span>自動原子削除の実装</a></span><ul class=\"toc-item\"><li><span><a href=\"#energyおよびnlによる抽出\" data-toc-modified-id=\"energyおよびnlによる抽出-4.1\"><span class=\"toc-item-num\">4.1&nbsp;&nbsp;</span>energyおよびnlによる抽出</a></span></li><li><span><a href=\"#x位置による選別\" data-toc-modified-id=\"x位置による選別-4.2\"><span class=\"toc-item-num\">4.2&nbsp;&nbsp;</span>x位置による選別</a></span></li><li><span><a href=\"#POSCARファイルの仕様\" data-toc-modified-id=\"POSCARファイルの仕様-4.3\"><span class=\"toc-item-num\">4.3&nbsp;&nbsp;</span>POSCARファイルの仕様</a></span></li><li><span><a href=\"#auto_delete_poscar\" data-toc-modified-id=\"auto_delete_poscar-4.4\"><span class=\"toc-item-num\">4.4&nbsp;&nbsp;</span>auto_delete_poscar</a></span></li></ul></li></ul></div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#  粒界の最安定構造探索の自動化"
   ]
  },
  {
   "cell_type": "markdown",
=======
>>>>>>> 29c238a1a4c63627f7991fcd1cdc47fe39d7cb0f
   "metadata": {},
   "source": [
    "# はじめに"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 背景"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "西谷研では最安定の粒界エネルギーを第一原理計算で求める研究を行っている．\n",
    "\n",
    "この研究において，\n",
    "第一原理計算はVASPという計算ソフトによって自動で行われるが，その前後の作業工程のいくつかが手動で行われている．\n",
    "\n",
    "> 主な作業名称:コマンド名(自動化の度合い)\n",
    "\n",
    "をまとめると\n",
    "1. 原子モデル作成:modeler\n",
    "   1. 粒界セルモデル作成:make_all(自動化済み)\n",
    "   1. 原子削除(手動)\n",
    "1. 計算サーバへのファイル転送:scp(手動)\n",
    "1. 計算設定ファイル:vasprun\n",
    "   1. ファイル配置(自動化済み)\n",
    "   1. 構造最適化の手動設定(手動)\n",
    "1. 第一原理計算:vasp(自動)\n",
    "1. 結果の解析:rake gets finishedn(自動化済み)\n",
    "\n",
    "である．\n",
    "\n",
    "これらは使い慣れた作業者に取っては，\n",
    "間違った場合もすぐに気づくことができ，\n",
    "間違いのケアも迅速に出来るという点では良い．\n",
    "しかし，初心者がこれらの作業を手動でやると，\n",
    "途中で何をしているのか分からなくなり，効率が悪くなってしまう\n",
    "\n",
    "## 目的\n",
    "\n",
    "これらの手順の一部を自動で行ったり，\n",
    "間違いを検出してくれるようなシステムを構築し，\n",
    "初心者でも簡単に最安定な粒界エネルギーを求められるようにすることが本研究の目的である．\n",
    "\n",
    "最初に構造最適化についておこなう．\n",
    "さらに，自動原子削除についての試みを記す．\n",
    "なお，作業全体の手順は藤村がまとめている[参照:藤村]．"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 構造最適化"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 背景\n",
    "\n",
    "構造最適化が何故必要となるかを初めに詳しく記しておく．"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### VASPの構造最適化ルーチン\n",
    "\n",
    "図はAlの3315で作成したモデルのtop viewである．これを緩和させて最安定エネルギーを求める．\n",
    "このためには内部の原子配置と，外部のセル形状の両方を緩和させる必要がある．\n",
    "今後これらをそれぞれ内部緩和，外部緩和と呼んでいく．\n",
    "<!--\n",
    "![<spandata-label=\"fig:one\"></span>](./figs/POSCAR_0_3315_46_Al.png)\n",
    "-->\n",
    "\n",
    "![キャプション．¥label{fig-one}](./figs/POSCAR_0_3315_46_Al.png)\n",
    "一般的な第一原理計算では構造最適化のルーチンが用意されている．\n",
    "我々が使用しているVASPにおいて用意されているルーチンは表の通りである．\n",
    "\n",
    "| ISIF|force|stress tensor|ions|cell shape|cell volume|\n",
    "|:----|:----|:----|:----|:----|:----|\n",
    "|0|yes|no|yes|no|no|\n",
    "|1|yes|trace only*|yes|no|no|\n",
    "|2|yes|yes|yes|no|no|\n",
    "|3|yes|yes|yes|yes|yes|\n",
    "|4|yes|yes|yes|yes|no|\n",
    "|5|yes|yes|no|yes|no|\n",
    "|6|yes|yes|no|yes|yes|\n",
    "|7|yes|yes|no|no|yes|\n",
    "* Trace only means that only the total pressure, i.e. the line\n",
    "http://cms.mpi.univie.ac.at/vasp/guide/node112.html\n",
    "\n",
    "\n",
    "VASPの呼称ではionが内部原子を，cellが外部セル形状を意味する．\n",
    "\n",
    "例えば，ISIF=0ではion=yes，cell shape, volume=noとなっており，内部緩和は行うが，cellの形状と体積はfixしたままである．\n",
    "\n",
    "ISIF=7では，内部緩和をおこないセルは形状を保ったまま，体積を変化させる．\n",
    "ところが，セル形状を保ったままでの体積変化は，等方的に緩和させるようである．\n",
    "\n",
    "図はISIF=3で計算した場合の結果を示した．\n",
    "![外部緩和の失敗例．\\label{one}](./figs/thesis/thesis_004.jpeg)\n",
    "\n",
    "粒界構造のモデルで用いられる，いびつな立方晶のセル形状から\n",
    "外部，内部緩和を全て自動で緩和させると，\n",
    "外部セル形状が極端に変形する．\n",
    "いびつな立方晶のセル形状を保ったまま\n",
    "それぞれの長さを変えるようなスイッチは用意されていない．\n",
    "したがってこれを行うルーチンは，独自に開発する必要がある．\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### POSCARのファイル構造\n",
    "\n",
    "モデルとしてCu_3315をつかう．\n",
    "これは系のサイズが小さく，第一原理計算VASPの計算時間が\n",
    "少なく済むからである．\n",
    "\n",
    "いかに，VASPの計算に投入する原子の情報を集めた\n",
    "POSCARと呼ばれるファイルである．\n",
    "```\n",
    "> head POSCAR_0_3315_46_Al\n",
    "(Al) Source:.POSCAR_0;Expand:3,3,1;Shaped;Rotate:1/5,22.62[degrees];Mirrorred;Shaped2;Cut:0.81715-0.84984\n",
    "   1.00000000000000\n",
    "  19.8145937137    0.0000000000    0.0000000000\n",
    "   0.0000000000   10.3035887311    0.0000000000\n",
    "   0.0000000000    0.0000000000    4.0414000000\n",
    "46\n",
    "Selective dynamics\n",
    "Direct\n",
    "   0.6000000000    0.0384615385    0.5000000000 T T T\n",
    "   0.5800000000    0.2307692308    0.0000000000 T T T\n",
    "...以下略\n",
    "```\n",
    "\n",
    "\n",
    "\n",
    "3行目から5行目にかかれた3次元ベクトルがcellの外形のa,b,cを\n",
    "示している．\n",
    "$a$が図では$x$軸，$b$が$y$軸，$c$が$z$軸のベクトルの\n",
    "カーテシアン座標をオングストロームで示している．\n",
    "\n",
    "さらに次の行にそのセルに含まれる原子の数(=46)が表記されている．\n",
    "それ以降の2行にキーワードがあり，\n",
    "それ以下には，それぞれの原子のローカルな相対座標が記されている．\n",
    "これがPOSCARファイルの構造である．\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### vasp計算の結果"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "図はAl_3315のセルサイズ変化によるエネルギー表面を示している．\n",
    "\n",
    "![<spandata-label=\"fig:two Al_3315のセルサイズ変化によるエネルギー表面．\"></span>](./figs/Al_3315_surface.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "このエネルギー表面の特徴は次の通りである．\n",
    "1. x=-8..0\n",
    "1. y=-2..2\n",
    "1. x軸方向の変化は大きい．\n",
    "1. y軸方向の変化はねじれている．すなわち\n",
    "   1. x=0ではyの増加につれて上がっていくが，\n",
    "   1. x=-8ではyの増加につれて下がっている\n",
    "1. x=-4の直線上でminimumを取っている．\n",
    "\n",
    "もう少し細かくエネルギー計算をした場合と，もう少し荒くエネルギー計算をした場合で，\n",
    "最小値やその位置が大きく変わるかどうかを検証する必要がある．\n",
    "\n",
    "また，この例では最小値の囲い込みがうまくいっているが，初期には\n",
    "囲い込まれていなかった．したがって，どの程度の余裕をもって\n",
    "計算の初期値とするかを決定する必要がある．\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "これは，計算によって得られた値を3次元プロットした結果である．\n",
    "\n",
    "\n",
    "| x | y | E\n",
    "|---:|---:|---:\n",
    "|  -8|  -2|   0.70408\n",
    "|  -8|   0|   0.62402\n",
    "|  -8|   2|   0.58637\n",
    "|  -4|  -2|   0.54846\n",
    "|  -4|   0|   0.52160\n",
    "|  -4|   2|   0.52985\n",
    "|   0|  -2|   0.58105\n",
    "|   0|   0|   0.59046\n",
    "|   0|   2|   0.63185\n",
    "\n",
    "これらの値は，粒界モデルのx軸，y軸を変化させ，セル形状を固定した状態で，内部緩和をおこないエネルギー計算を行っている．\n",
    "これをfittingして，最安定構造を求めるには次のMapleスクリプトで得られる．\n",
    "\n",
    "``` \n",
    "x0:=-4;y0:=0;\n",
    "with(stats): data:=[xx,yy,zz]: \n",
    "fit1:=fit[leastsquare[[x,y,z], \n",
    "    z=a1+a2*(x-x0)+a3*(y-y0)+a4*(x-x0)*(y-y0)+\n",
    "      a5*(x-x0)^2+a6*(y-y0)^2, \n",
    "    {a1,a2,a3,a4,a5,a6}]](data);\n",
    "\n",
    "fit1 := z = .5026144708-0.4629870219e-2*x-0.7128049500e-2*y+\n",
    "(0.5266188957e-2*(x+4))*y+0.5395943477e-2*(x+4)^2+0.4563284219e-2*y^2\n",
    "```\n",
    "これで求められた関数fit1をx,yで微分し，連立方程式として解くと\n",
    "\n",
    "``` \n",
    "e1:=diff(f1(x,y),x);\n",
    "e2:=diff(f1(x,y),y);\n",
    "s1:=solve({e1,e2},{x,y});\n",
    "       0.03853767760 + 0.005266188957 y + 0.01079188695 x\n",
    "      0.01393670633 + 0.005266188957 x + 0.009126568438 y\n",
    "              {x = -3.933335758, y = 0.7425554356}\n",
    "subs(s1,f1(x,y));\n",
    "                          0.5183331423\n",
    "```\n",
    "として求めることが可能である．\n",
    "\n",
    "この最安定構造をできるだけ少ない手数で求めることが開発目標となる．\n",
    "\n",
    "ところがこれらの結果はVASPによって得られたエネルギー値を示している．\n",
    "VASPはこの程度の計算であっても，一点の計算に現有の設備でAlで1時間50分程度，Cuの計算では6時間程度が必要となる[参照:藤村]．\n",
    "これを開発段階で使っていては応答時間が長すぎるため，現実的ではない．\n",
    "そこで，計算時間が劇的に短い経験ポテンシャルであるEAMを使って開発を進める．\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 手法\n",
    "\n",
    "### EAM\n",
    "\n",
    "eamはembedding atom methodと呼ばれる原子間のポテンシャルで．．．\n",
    "ここ書きや．\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ディレクトリー構造\n",
    "pseudo_vaspに関連するファイルを作成する．\n",
    "\n",
    "``` \n",
    "tree pseudo_vasp\n",
    ".\n",
    "├── CODE_OF_CONDUCT.md\n",
    "├── Gemfile\n",
    "├── Gemfile.lock\n",
    "├── LICENSE.txt\n",
    "├── README.md\n",
    "├── Rakefile\n",
    "├── bin\n",
    "│   ├── console\n",
    "│   └── setup\n",
    "├── docs\n",
    "├── exe\n",
    "│   └── pseudo_vasp\n",
    "├── lib\n",
    "│   ├── pseudo_vasp\n",
    "│   │   ├── eam.rb\n",
    "│   │   └── version.rb\n",
    "│   └── pseudo_vasp.rb\n",
    "├── pseudo_vasp.gemspec\n",
    "└── test\n",
    "    ├── POSCAR_0\n",
    "    ├── POSCAR_0_3315_46_Al\n",
    "    ├── cell_bracket.rb\n",
    "    ├── cell_relaxation.rb\n",
    "    ├── eam.rb\n",
    "    ├── pseudo_vasp_test.rb\n",
    "    └── test_helper.rb\n",
    "\n",
    "6 directories, 21 files\n",
    "```\n",
    "これは，ruby gemsのライブラリーの標準構成で，\n",
    "\n",
    "> bundler gem init -b pseudo_vasp\n",
    "\n",
    "で作成された．\n",
    "\n",
    "libの中にeamポテンシャルのcodeが入っている．\n",
    "testにはそれぞれの計算駆動codeを置いている．\n",
    "それらは，\n",
    "```\n",
    "eam.rb                eamのe-v曲線\n",
    "cell_relaxation.rb    外部cell変形のエネルギー\n",
    "cell_bracket.rb       cell緩和の囲い込み\n",
    "```\n",
    "である．\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 結果"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 囲い込み\n",
    "\n",
    "一般的な数値計算における最適化の最初の一歩は解の囲い込みである．\n",
    "数値計算のバイブルNumerical recipeにはそのための標準ルーチンとしてmnbrakが用意されている．\n",
    "そこで，まずはこれをrubyで実装した．\n",
    "\n",
    "\"Numerical Recipes in C\", by W.H.Press他,(技術評論社, 1993), pp.285-289\n",
    "\n",
    "結果は次の通りである．\n",
    "```\n",
    "[1]init range:   1.00000-   1.02000\n",
    " init_x:=[ 1.0200,  1.0000,  0.9676]; init_y:=[ 0.2414,  0.0000,  1.1178];\n",
    "final_x:=[ 1.0200,  1.0000,  0.9676];final_y:=[ 0.2414,  0.0000,  1.1178];\n",
    "n_calc:   3\n",
    "\n",
    "[2]init range:   0.98000-   0.99000\n",
    " init_x:=[ 0.9800,  0.9900,  1.0062]; init_y:=[ 0.3041,  0.0454,  0.0404];\n",
    "final_x:=[ 0.9900,  0.9982,  1.0062];final_y:=[ 0.0454, -0.0033,  0.0404];\n",
    "n_calc:   4\n",
    "\n",
    "[3]init range:   0.97000-   0.97500\n",
    " init_x:=[ 0.9700,  0.9750,  0.9831]; init_y:=[ 0.9058,  0.5516,  0.1947];\n",
    "final_x:=[ 0.9898,  0.9974,  1.0008];final_y:=[ 0.0475, -0.0034,  0.0027];\n",
    "n_calc:   6\n",
    "\n",
    "[4]init range:   0.97000-   0.97200\n",
    " init_x:=[ 0.9700,  0.9720,  0.9752]; init_y:=[ 0.9058,  0.7497,  0.5377];\n",
    "final_x:=[ 0.9873,  0.9981,  1.0068];final_y:=[ 0.0900, -0.0034,  0.0465];\n",
    "n_calc:   6\n",
    "\n",
    "[5]init range:   0.97000-   0.97100\n",
    " init_x:=[ 0.9700,  0.9710,  0.9726]; init_y:=[ 0.9058,  0.8252,  0.7055];\n",
    "final_x:=[ 0.9864,  0.9984,  1.0088];final_y:=[ 0.1075, -0.0032,  0.0688];\n",
    "n_calc:   6\n",
    "\n",
    "[6]init range:   0.97000-   1.00100\n",
    " init_x:=[ 0.9700,  1.0010,  1.0512]; init_y:=[ 0.9058,  0.0036,  0.8926];\n",
    "final_x:=[ 0.9700,  1.0010,  1.0512];final_y:=[ 0.9058,  0.0036,  0.8926];\n",
    "n_calc:   3\n",
    "```\n",
    "\n",
    "テストケース[1],[6]は，計算結果からわかる通り初期値とさらにcx = bx + GOLD\\*(bx-ax)で求められる値を計算するだけで囲い込みが成功している．\n",
    "\n",
    "\n",
    "テストケース[2]は，初期の3点では囲い込んでいるかがわからず中簡点を追加計算することで求めている．\n",
    "この様子を図に示した．初期の3点は赤丸で，最終結果の3点を青丸で示している．初期の3点の中間に，青丸で示した4つ目の計算結果が追加されている．\n",
    "\n",
    "一方，テストケース[4]-[6]は囲い込みが初期の3点ではうまくいっておらず，だいぶ外側に外れた位置での計算が必要となっている．初期値のステップの大小によるロスはmnbrakの計算ルーチンによってうまく回避されている(図(b),(c))．\n",
    "<!--\n",
    "![<spandata-label=\"fig:two mnbrakによる囲い込み．\"></span>](./figs/thesis_006.jpeg)\n",
    "-->\n",
    "![キャプション．¥label{label名}](./figs/thesis_006.jpeg)\n",
    "初期値の取り方を間違うと最大6になるが，\n",
    "概ね，囲い込みは効率良くmnbrakによって可能であることが確認できた．\n",
    "そこで，このルーチンをそのまま使ってこの後の開発を進めることとした．\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 界面エネルギーへの変換\n",
    "次に示すコードは計算サーバに用意されているRakefile内で\n",
    "VASP計算結果から表面エネルギーを求めるメソッドである．\n",
    "\n",
    "``` \n",
    "def calc_df_es(n_atom, lat_c)\n",
    "  _status, stdout, = systemu(\"tail inner_*.o* |grep 'F='\")\n",
    "  df = stdout.scan(/F=(.+) E0/)[0][0].to_f\n",
    "  de = df - n_atom * -3.739501247\n",
    "  ss = lat_c[1] * lat_c[2]\n",
    "  es = de / ss * 1.60218 * 10 / 2\n",
    "  df.to_s + ' ' + es.to_s + \"\\n\"\n",
    "end\n",
    "```\n",
    "\n",
    "ここで，lat\\_c[1], lat\\_c[2]に$a,b$軸の値が，ssに界面の面積が，\n",
    "dfにVASPで求められたエネルギー値が，\n",
    "n_atomに原子数が入っている．esでは得られた界面エネルギー($dE/S$)を\n",
    "\"[eV/A^2]\"から\"[J/m^2]\"に変換している．\n",
    "分母の2はユニットセル内に2枚の界面があるためにその数で割っている．\n",
    "\n",
    "この出力をとると，\n",
    "```\n",
    "#i  j  dE  \n",
    "  -6   -1   18.62572   10.20055    4.04140 -168.48987 0.6854160866046254\n",
    "  -6    0   18.62572   10.30359    4.04140 -168.56613 0.6638909918907453\n",
    "  -6    1   18.62572   10.40662    4.04140 -168.59626 0.6515787808351412\n",
    "...\n",
    "```\n",
    "となる．これに対応して，pseudo_vaspの出力を調整して，\n",
    "```\n",
    "  -2   -2  19.81459   10.30359    4.04140 -150.03001   0.24146     \n",
    "  -2   -1  19.81459   10.30359    4.04140 -150.15656   0.23390     \n",
    "  -2    0  19.81459   10.30359    4.04140 -150.15225   0.23173     \n",
    "  -2    1  19.81459   10.30359    4.04140 -150.04017   0.23388     \n",
    "  -2    2  19.81459   10.30359    4.04140 -149.84182   0.23938     \n",
    "  -1   -2  19.81459   10.30359    4.04140 -150.32396   0.22713     \n",
    "  -1   -1  19.81459   10.30359    4.04140 -150.43100   0.22055     \n",
    "  -1    0  19.81459   10.30359    4.04140 -150.41091   0.21914     \n",
    "  -1    1  19.81459   10.30359    4.04140 -150.28600   0.22187     \n",
    "  -1    2  19.81459   10.30359    4.04140 -150.07716   0.22781     \n",
    "   0   -2  19.81459   10.30359    4.04140 -150.39718   0.22193     \n",
    "   0   -1  19.81459   10.30359    4.04140 -150.48888   0.21605     \n",
    "   0    0  19.81459   10.30359    4.04140 -150.45633   0.21517     \n",
    "   0    1  19.81459   10.30359    4.04140 -150.32128   0.21828     \n",
    "   0    2  19.81459   10.30359    4.04140 -150.10416   0.22450     \n",
    "   1   -2  19.81459   10.30359    4.04140 -150.33460   0.22221     \n",
    "   1   -1  19.81459   10.30359    4.04140 -150.41477   0.21682     \n",
    "   1    0  19.81459   10.30359    4.04140 -150.37283   0.21628     \n",
    "   1    1  19.81459   10.30359    4.04140 -150.23011   0.21963     \n",
    "   1    2  19.81459   10.30359    4.04140 -150.00670   0.22599     \n",
    "   2   -2  19.81459   10.30359    4.04140 -150.19187   0.22564     \n",
    "   2   -1  19.81459   10.30359    4.04140 -150.26371   0.22057     \n",
    "   2    0  19.81459   10.30359    4.04140 -150.21493   0.22024     \n",
    "   2    1  19.81459   10.30359    4.04140 -150.06662   0.22370     \n",
    "   2    2  19.81459   10.30359    4.04140 -149.83865   0.23011\n",
    "```\n",
    "\n",
    "とした．このエネルギー表面を描画すると次のとおりとなる．\n",
    "\n",
    "<!--\n",
    "![<spandata-label=\"fig:cell外形の変位によるエネルギー表面．\"></span>](./thesis/thesis.007.jpeg)\n",
    "-->\n",
    "\n",
    "![cell外形の変位によるエネルギー表面．\\label{spandata-label}](./figs/thesis/thesis_007.jpeg)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "cellの外形変位によるエネルギー表面は上図のようになる．ここで，VASPの結果との違いは次のとおりである．\n",
    "1. VASPではx=-8..0で囲い込まれているのに対して，EAMではx=-2..2で囲い込まれている\n",
    "1. EAMの結果はx=2およびx=-2において，yの変化に対してどちらも2次の項が優勢である．\n",
    "1. VASPの結果は，yの変化に対して1次の項も大きく寄与しており，さらにその傾きが逆向きに効いている．\n",
    "\n",
    "これが後ほど聞いてくるかもしれないので留意しておく．\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2次元での最小化\n",
    "\n",
    "### 最小計算数での試行\n",
    "次に2次元の最小化をすることになる．\n",
    "一般的なテキストでは，この後，多次元の最小化を行う，共役勾配法などが使われるが，\n",
    "我々の問題では2次元と，非常に少ない次元数であるので，このままmnbrakを使って，\n",
    "x,yで最小化を試みる．\n",
    "\n",
    "mnbrakの最初の実装では，\n",
    "``` \n",
    "def func(ax)\n",
    "  $n_calc+=1\n",
    "  $model.set_cell_size(ax)\n",
    "  $model.total_energy+150.45633275921924\n",
    "end\n",
    "\n",
    " # mnbrak, coding from Num Recipe in C\n",
    "def mnbrak(ax, bx)\n",
    "  printf(\"init range:%10.5f-%10.5f\\n\",ax,bx)\n",
    "  $n_calc = 0\n",
    "\n",
    "  fa = func(ax)\n",
    "```\n",
    "\n",
    "としていた．これをy軸方向への変位を扱えるように，次の様に変更した．\n",
    "\n",
    "```\n",
    "def func_x(ax,ay=1.0)\n",
    "  $n_calc+=1\n",
    "  $model.set_cell_size(ax,ay)\n",
    "  $model.total_energy+150.45633275921924\n",
    "end\n",
    "\n",
    "def func_y(ay, ax=1.0) # note the order of ax, ay \n",
    "  $n_calc+=1\n",
    "  $model.set_cell_size(ax,ay)\n",
    "  $model.total_energy+150.45633275921924\n",
    "end\n",
    "\n",
    " # mnbrak, coding from Num Recipe in C\n",
    "def mnbrak(ax, bx, method_func=method(:func_x))\n",
    "  printf(\"init range:%10.5f-%10.5f\\n\",ax,bx)\n",
    "  $n_calc = 0\n",
    "\n",
    "  fa = method_func.call(ax)\n",
    "```\n",
    "\n",
    "具体的な変更箇所は，\n",
    "1. 呼び出す関数を引数として受け取り，\n",
    "1. それを明示的に呼び出す(call)\n",
    "\n",
    "である．これによって，x軸とy軸に沿った囲い込みを行えるように変更している．\n",
    "これによって，mnbrakのcodeを書き換えること無く，\n",
    "関数func_x, func_yに変位の操作を委ねている．\n",
    "これに従ってmnbrakを2次元で行うように変更すると，\n",
    "呼び出し方は，\n",
    "\n",
    "```\n",
    "  x_min =  mnbrak(1.0, 1.02, method(:func_x) )\n",
    "  y_min =  mnbrak(1.0, 1.02, method(:func_y) )\n",
    "```\n",
    "\n",
    "と変更することで\n",
    "\n",
    "``` \n",
    "math := <<   2.00000|   0.00000|   0.24140>,\n",
    "<   0.00000|   0.00000|   0.00000>,\n",
    "<  -3.23607|   0.00000|   1.11778>,\n",
    "<   0.00000|   2.00000|   0.35218>,\n",
    "<   0.00000|   0.00000|   0.00000>,\n",
    "<   0.00000|  -3.23607|   0.37768>>;\n",
    "```\n",
    "\n",
    "と数値が得られる．\n",
    "\n",
    "これからfittingを行うと\n",
    "\n",
    "<!--\n",
    "![<spandata-label=\"fig:x,y軸方向のmnbrakによる最安定化の試行．\"></span>](./thesis/thesis.008.jpeg)\n",
    "-->\n",
    "\n",
    "![x,y軸方向のmnbrakによる最安定化の試行．¥label{spandata-label}](./figs/thesis/thesis_008.jpeg)\n",
    "\n",
    "となる．これはcalc_e_surfでの結果と違っている．\n",
    "なぜなら，エネルギー表面は最安定ではなく，\n",
    "鞍点となっているからである．\n",
    "したがって，もうすこし，工夫が必要である．"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 手動による計算点の追加\n",
    "\n",
    "先ほどのグラフをみると，鞍点になった原因は，\n",
    "範囲の最小値ペアと最大値ペアのところで，\n",
    "値が小さいと判断されていたためと考えられる．\n",
    "\n",
    "そこで，まずは\n",
    "```\n",
    "  print \"indicate additional calc point [x,y]:\"\n",
    "  line = gets\n",
    "  x,y=line.chomp.split(',')\n",
    "  $model.set_cell_size(x.to_f/100.0+1.0,y.to_f/100.0+1.0)\n",
    "  z = $model.total_energy+150.45633275921924\n",
    "```\n",
    "として，この値を手動で追加して\n",
    "どのようになるかを確かめた．\n",
    "\n",
    "<!--\n",
    "![<spandata-label=\"fig:範囲の最小値ペアと最大値ペアの手動追加．\"></span>](./thesis/thesis.008.jpeg)\n",
    "-->\n",
    "\n",
    "![範囲の最小値ペアと最大値ペアの手動追加．\\label{spandata-label}](./figs/thesis/thesis_009.jpeg)\n",
    "\n",
    "その結果は，安定的なエネルギー表面が描画できている．\n",
    "さらに，fittingして求めた関数での最小値は，\n",
    "微小変位で埋め尽くして計算した値と，最安定の\n",
    "値は違っているが，最安定の場所はそれほど悪くない．\n",
    "\n",
    "また，エネルギー計算の回数は5+2で7である．\n",
    "これは，一般的な2次元で網羅的に計算する３ｘ３の9点よりも\n",
    "少ない．\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  自動での追加\n",
    "\n",
    "先ほどの手動による計算点の追加では，手間がかかる．\n",
    "そこで，計算点は増えるが，自動で計算点を追加するようにcodeを\n",
    "改良した\n",
    "\n",
    "<!--\n",
    "![<spandata-label=\"fig:範囲の最小値ペアと最大値ペアを自動追加．\"></span>](./thesis/thesis.009.jpeg)\n",
    "-->\n",
    "\n",
    "![範囲の最小値ペアと最大値ペアを自動追加．¥label{spandata-label}](./figs/thesis/thesis_010.jpeg)\n",
    "\n",
    "この結果は，手動で追加した結果を再現している．しかし，\n",
    "エネルギー計算の回数を減らしているのでは無いので，\n",
    "やはり工夫が必要であろう．\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 問題の見直し\n",
    "\n",
    "問題は，囲い込みがうまく行っていれば，9回程度で\n",
    "計算が終了するが，そうでなければ余計な計算がかかることである．\n",
    "\n",
    "そこで，問題をもういちど見直すことにした．\n",
    "要は，外部緩和の計算をできるだけ減らしたいということである．\n",
    "もう一度，Alの計算結果を精査してみた．\n",
    "\n",
    "\n",
    "| /Users/bob/Github/boundary/bob/data/whole_data/ | x | y\n",
    "|:---|---:|---:\n",
    "|0_5s/vasp_res_0_3315_46|-4|1\n",
    "|0_5s/vasp_res_0_6615_108|-8|1\n",
    "|0_5s/vasp_res_0_6615_148|-6|1\n",
    "|0_5s/vasp_res_0_6615_188|-4|0\n",
    "|0_7s/vasp_res_0_4417_88 |-8|0\n",
    "|0_7s/vasp_res_0_8817_130|-6|0\n",
    "|0_7s/vasp_res_0_8817_186|-4|0\n",
    "|0_7s/vasp_res_0_16417_386|-2|0\n",
    "|0_9s/vasp_res_0_5519_148|-8|1\n",
    "|0_9s/vasp_res_0_5519_152|-4| 0\n",
    "|0_9s/vasp_res_0_101019_310|-4|0\n",
    "\n",
    "energyがminiに鳴っている，x,yのペアの一覧表をつくってください．\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 自動原子削除の実装\n",
    "\n",
    "粒界生成において，回転，並びに鏡映操作を行った後の原子配置を図に示した．\n",
    "\n",
    "![](./auto_delete/auto_delete_002.jpeg)\n",
    "削除操作前後の原子配置，8417_186を例示．\n",
    "\n",
    "ここでは，8417_186を例にしている．8417の数字は粒界系全体の構造を表している．それぞれ，x=8, y=4, z=1およびtan $\\theta=1/7$を意味しており，x軸方向に8x2層，y軸方向に4x2層の層を保持している．\n",
    "\n",
    "削除操作は，このx=0, およびx=0.5つまり，系の端と真ん中あたりにある\n",
    "粒界近傍において，原子が詰まりすぎているのを解消するために行う操作である．\n",
    "枠線で囲った領域の原子を削除する．\n",
    "これまではVestaという表示ソフトを使って，原子サイトナンバーを手動で確認し，\n",
    "モデル作成司令ファイル(modeler_8417など)に記述する必要があった．\n",
    "これを自動化しようというのがここで目指す開発コードである．"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## energyおよびnlによる抽出"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "当初，eamのプログラムコードを流用して原子のエネルギー(:ene, energyの略)\n",
    "あるいは配位数(:nl,neighbour listを意味)を使った選別を試みた．\n",
    "近傍の原子を取り出すと，\n",
    "\n",
    "``` \n",
    "   4   28.86278    8.28733    2.02070  11   -2.65182  0.738    3.08007   -5.73189 0.54\n",
    "   5   28.57701   10.28772    0.00000  13    0.23319  3.623    7.50972   -7.27653 1.03\n",
    "   6   28.29124   12.28812    2.02070  14   12.27927 15.669   21.86782   -9.58855 2.28\n",
    "   8   55.72518    6.00117    2.02070  14   12.27927 15.669   21.86782   -9.58855 2.28\n",
    "  94   55.43941    8.00156    0.00000  13    0.23319  3.623    7.50972   -7.27653 1.03\n",
    "  95   55.15364   10.00195    2.02070  11   -2.65182  0.738    3.08007   -5.73189 0.54\n",
    " 103   27.14816    8.28733    2.02070  11   -2.65182  0.738    3.08007   -5.73189 0.54\n",
    " 104   27.43393   10.28772    0.00000  13    0.23319  3.623    7.50972   -7.27653 1.03\n",
    " 105   27.71970   12.28812    2.02070  14   12.27927 15.669   21.86782   -9.58855 2.28\n",
    " 106    0.28577    6.00117    2.02070  14   12.27927 15.669   21.86782   -9.58855 2.28\n",
    " 192    0.57154    8.00156    0.00000  13    0.23319  3.623    7.50972   -7.27653 1.03\n",
    " 193    0.85731   10.00195    2.02070  11   -2.65182  0.738    3.08007   -5.73189 0.54\n",
    "```\n",
    "が選択される．これは，6列目に記されたeneryを基準に選別したものである．\n",
    "しかし，サイト番号7に対応する\n",
    "```\n",
    "   7   56.01095    4.00078    0.00000  12   -3.39000 -0.000    1.79000   -5.18000 0.35\n",
    "```\n",
    "がこれらの選別基準では最安定原子と同じ環境であるため，選択から外れてしまう．\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## x位置による選別\n",
    "\n",
    "そこで，x座標による選別を実装した．\n",
    "初期のcodeがわかりやすいので，そのまま記すと次のようになる．\n",
    "\n",
    "``` \n",
    "a_length =   56.0109463716\n",
    "dx = a_length/(32+2)\n",
    "a_half = a_length/2.0\n",
    "if x_pos < dx or  (x_pos > a_half and x_pos < a_half + dx)\n",
    "    printf(\"%10.5f: \", x_pos/a_length)\n",
    "```\n",
    "削除領域の幅(dx)は層数から計算する．\n",
    "中心の長さはx軸の長さ(a_length)から計算している．\n",
    "これらの領域\n",
    "> 0 < x_pos < dx\n",
    "\n",
    "> a_half < x_pos < a_half + dx\n",
    "\n",
    "を選別するのがif文以下のところである．\n",
    "\n",
    "こうして得られた削除原子のx_posを取り出すと，\n",
    "```\n",
    "> ruby auto_delete.rb converted_poscar.txt \n",
    "divide num:   32\n",
    "a length  :   56.0109463716\n",
    "normal dx :    0.03125\n",
    "       dx :    1.75034\n",
    "   2:    0.53061   29.72009\n",
    "   3:    0.52551   29.43432\n",
    "   4:    0.52041   29.14855\n",
    "   5:    0.51531   28.86278\n",
    "   6:    0.51020   28.57701\n",
    "   7:    0.50510   28.29124\n",
    " 107:    0.00510    0.28577\n",
    " 192:    0.03061    1.71462\n",
    " 193:    0.01020    0.57154\n",
    " 194:    0.01531    0.85731\n",
    " 195:    0.02041    1.14308\n",
    " 196:    0.02551    1.42885\n",
    "```\n",
    "となる．ここでは，2番，192番は消したくない原子である．\n",
    "これは，モデルのサイズによって変わる．\n",
    "この調整をdivide numによって自動計算からするか，\n",
    "あるいは10原子削除というように外部入力として入れるかを検討する必要がある．\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## POSCARファイルの仕様\n",
    "\n",
    "粒界の原子座標の入出力は第一原理計算ソフトVASPのPOSCARファイルを通じて行う．\n",
    "そこで，POSCARファイルを直接あつかうPOSCAR classを設計する．\n",
    "\n",
    "今後code内での変数名を用語を一致させるため，VASP標準の単語を使用する．\n",
    "POSCARの仕様は\n",
    "> http://cms.mpi.univie.ac.at/vasp/guide/node59.html\n",
    "\n",
    "あるいはVASP manual, pp.43-4に解説されている．\n",
    "\n",
    "\n",
    "```\n",
    "Cubic BN         # comment line ('name' of the system)\n",
    "   3.57          # universal scaling factor ('lattice constant')\n",
    " 0.0 0.5 0.5     # lattice vectors\n",
    " 0.5 0.0 0.5  \n",
    " 0.5 0.5 0.0\n",
    "   1 1           # number of atoms per atomic species (one number for each atomic species)\n",
    "Selective dynamics  # 7th\n",
    "Cartesian           # 7th or 8th\n",
    " 0.00 0.00 0.00 T T F\n",
    " 0.25 0.25 0.25 F F F\n",
    "Cartesian\n",
    " 0.01 0.01 0.01\n",
    " 0.00 0.00 0.00\n",
    "optionally predictor-corrector coordinates \n",
    "   given on file CONTCAR of MD-run\n",
    "  ....\n",
    "  ....\n",
    "or\n",
    "Cubic BN\n",
    "   3.57\n",
    " 0.0 0.5 0.5\n",
    " 0.5 0.0 0.5\n",
    " 0.5 0.5 0.0\n",
    "   1 1\n",
    "Direct\n",
    " 0.00 0.00 0.00 \n",
    " 0.25 0.25 0.25\n",
    "```\n",
    "\n",
    "1から6行目に書かれた内容は上記の例にコメントで記した．\n",
    "\n",
    "7行目は省かれる場合がある．これがあると原子ごとに設定ができる．\n",
    "\n",
    "The seventh line switches to 'Selective dynamics' (only the first character is relevant and must be 'S' or 's'). This mode allows to provide extra flags for each atom signaling whether the respective coordinate(s) of this atom will be allowed to change during the ionic relaxation. This setting is useful if only certain 'shells' around a defect or 'layers' near a surface should relax. Mind: The 'Selective dynamics' input tag is optional: The seventh line supplies the switch between cartesian and direct lattice if the 'Selective dynamics' tag is omitted.\n",
    "\n",
    "と説明されている．\n",
    "\n",
    "さらに，7 or 8行目では，これ以降の原子座標の記述法としてCartesianあるいはDirectを指定する．\n",
    "次の行から原子数分の座標が記される．\n",
    "\n",
    "Directの場合は，原子位置$\\overrightarrow{R}$は，\n",
    "$$\n",
    "\\overrightarrow{R} = x_1 \\overrightarrow{a}_1 +\n",
    "x_2 \\overrightarrow{a}_2 +\n",
    "x_3 \\overrightarrow{a}_3\n",
    "$$\n",
    "で指定される．ここで，$\\overrightarrow{a}_{1 \\dots 3}$は三つの基底ベクトルを指す．そして，\n",
    "$x_{1 \\dots 3}$が原子座標に記された，小数点数での値である．\n",
    "\n",
    "Cartesianの場合は，\n",
    "$$\n",
    "\\overrightarrow{R} = s \\,\n",
    "\\left(\\begin{array}{cc}\n",
    "x_1\\\\\n",
    "x_2\\\\\n",
    "x_3\n",
    "\\end{array}\\right)\n",
    "$$\n",
    "で，$s$は2行目にかかれているuniversal scaling factorである．\n",
    "その他の箇所の説明は今回使用しないので，省略する．\n",
    "\n",
    "これらの記述に基づいて，それぞれの変数名を\n",
    "```\n",
    "Cubic BN         # comment\n",
    "   3.57          # scaling_factor\n",
    " 0.0 0.5 0.5     # lat_vec[0][0..2]\n",
    " 0.5 0.0 0.5     # lat_vec[1][0..2]\n",
    " 0.5 0.5 0.0     # lat_vec[2][0..2]\n",
    "   1 1           # n_atoms[0..1]\n",
    "Selective dynamics  # dynamics_selector\n",
    "Cartesian           # direct_cartesian_switch\n",
    " 0.00 0.00 0.00  # pos[0]\n",
    " 0.25 0.25 0.25  # pos[1]\n",
    "```\n",
    "とする．\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## auto_delete_poscar\n",
    "\n",
    "前述のPOSCARの情報を読み込むPoscar classを使って\n",
    "実装したのが次のコードである．\n",
    "\n",
    "```\n",
    "require './poscar'\n",
    "\n",
    "file = ARGV[0] || 'POSCAR_0_8417'\n",
    "poscar = Poscar.new(file)\n",
    "div = ARGV[1].to_i || 32+2\n",
    "printf(\"divide num: %4d\\n\", div)\n",
    "printf(\"a length  : %15.10f\\n\", a_length = poscar.lat_vec[0][0])\n",
    "printf(\"normal dx : %10.5f\\n\", dx = 1.0/div)\n",
    "\n",
    "a_half = 0.5\n",
    "selected = []\n",
    "poscar.pos.each_with_index do |pos,i_atom|\n",
    "  x_pos = pos[0]\n",
    "  if x_pos < dx or  (x_pos > a_half and x_pos < a_half + dx)\n",
    "    printf(\"%4d %10.5f\\n\",i_atom.to_i+1,x_pos)\n",
    "    selected << i_atom\n",
    "  end\n",
    "end\n",
    "\n",
    "poscar.delete_atoms(selected)\n",
    "File.open('POSCAR_tmp','w') do |file|\n",
    "  file.print poscar.poscar_format\n",
    "end\n",
    "```\n",
    "削除の幅は，原子層の厚さから推測できるように第2入力として指定している．\n",
    "delete_atomsはselectedで選ばれた番号の原子をPOSCARから消去する命令である．\n",
    "POSCAR_0_4417に適用した結果は次の通りである．\n",
    "\n",
    "``` \n",
    "> ruby auto_delete_poscar.rb POSCAR_0_4417 18\n",
    "divide num:   18\n",
    "a length  :   28.0054731858\n",
    "normal dx :    0.05556\n",
    "   3    0.55102\n",
    "   4    0.54082\n",
    "   5    0.53061\n",
    "   6    0.52041\n",
    "   8    0.51020\n",
    "  88    0.01020\n",
    "  91    0.02041\n",
    "  92    0.03061\n",
    "  95    0.04082\n",
    "  96    0.05102\n",
    "[95, 94, 91, 90, 87, 7, 5, 4, 3, 2]\n",
    "10\n",
    "88\n",
    "```\n",
    "\n",
    "削除原子数を指定することを断念した．これには，原子のx-座標でsortして順々に選択していかねばならない．\n",
    "そのsortを指定領域で実行するコードの記述が難しそうなので，今回は見送っている．\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.2"
  },
  "latex_envs": {
   "LaTeX_envs_menu_present": true,
   "autocomplete": true,
   "bibliofile": "biblio.bib",
   "cite_by": "apalike",
   "current_citInitial": 1,
   "eqLabelWithNumbers": true,
   "eqNumInitial": 1,
   "hotkeys": {
    "equation": "Ctrl-E",
    "itemize": "Ctrl-I"
   },
   "labels_anchors": false,
   "latex_user_defs": false,
   "report_style_numbering": false,
   "user_envs_cfg": false
  },
  "toc": {
   "nav_menu": {
    "height": "12px",
    "width": "252px"
   },
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
<<<<<<< HEAD
=======
   "threshold": 4,
>>>>>>> 29c238a1a4c63627f7991fcd1cdc47fe39d7cb0f
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": true,
   "toc_position": {
    "height": "435px",
    "left": "-8.69565200805664px",
    "right": "902.3505859375px",
    "top": "74.85054779052734px",
    "width": "237px"
   },
   "toc_section_display": "block",
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
